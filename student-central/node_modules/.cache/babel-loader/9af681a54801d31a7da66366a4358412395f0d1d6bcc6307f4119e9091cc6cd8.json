{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\CustomQuizpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/quiz-page/CustomQuizpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizForm = () => {\n  _s();\n  const [quizName, setQuizName] = useState('');\n  const [questions, setQuestions] = useState([{\n    term: '',\n    definition: ''\n  }]);\n  const [allQuizzes, setAllQuizzes] = useState({});\n  console.log(allQuizzes);\n  const [mounted, setMounted] = useState(false);\n\n  // Updates the state when changes are made in the form\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    // Updates the index in the array and the field(term/def).\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n\n  // Adds new term and definition\n  const handleAddQuestion = () => {\n    setQuestions([...questions, {\n      term: '',\n      definition: ''\n    }]);\n  };\n\n  //CHanges index and updates state\n  const handleRemoveQuestion = index => {\n    const updatedQuestions = [...questions];\n    updatedQuestions.splice(index, 1);\n    setQuestions(updatedQuestions);\n  };\n\n  // Save the Quiz in an array of arrays\n  const handleSaveQuiz = () => {\n    // Checks if the terms/def has values\n    if (quizName.trim() === '' || questions.some(q => !q.term || !q.definition)) {\n      alert('Please provide a quiz name and fill in all terms and definitions.');\n      return;\n    }\n\n    // Save the quiz data \n    // const quizData = { name: quizName, questions };\n\n    const copyAllQuizzes = {\n      ...allQuizzes\n    };\n    copyAllQuizzes[quizName] = questions;\n    setAllQuizzes(copyAllQuizzes);\n\n    // Resets the form\n    setQuizName('');\n    setQuestions([{\n      term: '',\n      definition: ''\n    }]);\n  };\n  useEffect(() => {\n    const saveQuiz = () => {\n      try {\n        fetch('http://localhost:4000/api/quiz/save-quiz', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(allQuizzes),\n          credentials: 'include'\n        });\n      } catch (error) {\n        console.log(\"error saveQuiz\", error);\n      }\n    };\n    if (mounted) {\n      saveQuiz();\n    }\n    //if mounting for the first time, dont save\n    else {\n      setMounted(true);\n    }\n  }, [allQuizzes]);\n  useEffect(() => {\n    const getQuizzes = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/quiz/my-quizzes', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch quizzes.');\n        }\n        const data = await response.json();\n        setAllQuizzes(data);\n      } catch (error) {\n        console.log('Error getting quizzes:', error);\n      }\n    };\n    getQuizzes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customQuizpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createQuizTitle\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Custom Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quiz Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: quizName,\n        onChange: e => setQuizName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Term:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.term,\n        onChange: e => handleQuestionChange(index, 'term', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Definition:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: question.definition,\n        onChange: e => handleQuestionChange(index, 'definition', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), questions.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleRemoveQuestion(index),\n        children: \"Remove Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSaveQuiz,\n      children: \"Save Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n_s(QuizForm, \"bKbH1WFiZJF5BbO1usTp0TOtaXs=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizForm","_s","quizName","setQuizName","questions","setQuestions","term","definition","allQuizzes","setAllQuizzes","console","log","mounted","setMounted","handleQuestionChange","index","field","value","updatedQuestions","handleAddQuestion","handleRemoveQuestion","splice","handleSaveQuiz","trim","some","q","alert","copyAllQuizzes","saveQuiz","fetch","method","headers","body","JSON","stringify","credentials","error","getQuizzes","response","ok","Error","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","question","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/CustomQuizpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/quiz-page/CustomQuizpage.css';\r\n\r\nconst QuizForm = () => {\r\n    const [quizName, setQuizName] = useState('');\r\n    const [questions, setQuestions] = useState([{ term: '', definition: '' }]);\r\n    const [allQuizzes, setAllQuizzes] = useState({});\r\n\r\n    console.log(allQuizzes);\r\n    const [mounted, setMounted] = useState(false);\r\n  \r\n    // Updates the state when changes are made in the form\r\n    const handleQuestionChange = (index, field, value) => {\r\n      const updatedQuestions = [...questions];\r\n      // Updates the index in the array and the field(term/def).\r\n      updatedQuestions[index][field] = value;\r\n      setQuestions(updatedQuestions);\r\n    };\r\n  \r\n    // Adds new term and definition\r\n    const handleAddQuestion = () => {\r\n      setQuestions([...questions, { term: '', definition: '' }]);\r\n    };\r\n  \r\n    //CHanges index and updates state\r\n    const handleRemoveQuestion = (index) => {\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions.splice(index, 1);\r\n      setQuestions(updatedQuestions);\r\n    };\r\n  \r\n    // Save the Quiz in an array of arrays\r\n    const handleSaveQuiz = () => {\r\n      // Checks if the terms/def has values\r\n      if (quizName.trim() === '' || questions.some((q) => !q.term || !q.definition)) {\r\n        alert('Please provide a quiz name and fill in all terms and definitions.');\r\n        return;\r\n      }\r\n  \r\n      // Save the quiz data \r\n      // const quizData = { name: quizName, questions };\r\n\r\n      const copyAllQuizzes = {...allQuizzes};\r\n      copyAllQuizzes[quizName] = questions;\r\n      setAllQuizzes(copyAllQuizzes);\r\n\r\n      \r\n  \r\n      // Resets the form\r\n      setQuizName('');\r\n      setQuestions([{ term: '', definition: '' }]);\r\n    };\r\n\r\n    useEffect(() => {\r\n      const saveQuiz = () => {\r\n        try{\r\n            fetch('http://localhost:4000/api/quiz/save-quiz', {\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(allQuizzes),\r\n            credentials: 'include'\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error saveQuiz\", error);\r\n        }\r\n    \r\n      }\r\n      if(mounted){\r\n        saveQuiz();\r\n      }\r\n      //if mounting for the first time, dont save\r\n      else{\r\n        setMounted(true);\r\n      }\r\n      \r\n      \r\n    }, [allQuizzes])\r\n\r\n    useEffect(() => {\r\n      const getQuizzes = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:4000/api/quiz/my-quizzes', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n  \r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch quizzes.');\r\n          }\r\n  \r\n          const data = await response.json();\r\n          setAllQuizzes(data);\r\n        } catch (error) {\r\n          console.log('Error getting quizzes:', error);\r\n        }\r\n      };\r\n  \r\n      getQuizzes();\r\n    }, []);\r\n\r\n    return (\r\n      <div className=\"customQuizpage\">\r\n        <div className=\"createQuizTitle\">\r\n          <h2>Create Custom Quiz</h2>\r\n        </div>\r\n        {/*Quiz Name form*/}\r\n        <div className=\"question-container\">\r\n          <label>Quiz Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={quizName}\r\n            onChange={(e) => setQuizName(e.target.value)}\r\n          />\r\n        </div>\r\n        {/*Form and inputs for the question. Maps them out */}\r\n        {questions.map((question, index) => (\r\n          <div key={index} className=\"question-container\">\r\n            <label>Term:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={question.term}\r\n              onChange={(e) => handleQuestionChange(index, 'term', e.target.value)}\r\n            />\r\n            <label>Definition:</label>\r\n            <textarea\r\n              value={question.definition}\r\n              onChange={(e) => handleQuestionChange(index, 'definition', e.target.value)}\r\n            />\r\n            {/*If the number of questions is greater than 1, than the remove button appears */}\r\n            {questions.length > 1 && (\r\n              <button type=\"button\" onClick={() => handleRemoveQuestion(index)}>\r\n                Remove Question\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleAddQuestion}>\r\n          Add Question\r\n        </button>\r\n        <button type=\"button\" onClick={handleSaveQuiz}>\r\n          Save Quiz\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default QuizForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}