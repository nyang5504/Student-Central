{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\EditQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../../styles/quiz-page/EditQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuiz = () => {\n  _s();\n  const {\n    quizName\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState({\n    quizName: '',\n    questions: [] // Set the initial questions array to be empty\n  });\n\n  const fetchQuizData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data.');\n      }\n      const data = await response.json();\n\n      // Assuming you receive an array of objects with 'term' and 'definition'\n      setQuizData(prevData => ({\n        ...prevData,\n        questions: data\n      }));\n      console.log('Quizdata from js:', quizData);\n    } catch (error) {\n      console.log('Error fetching quiz data.', error);\n    }\n  };\n  const handleChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setQuizData(prevData => ({\n      ...prevData,\n      terms: prevData.terms.map((termData, i) => i === index ? {\n        ...termData,\n        [name]: value\n      } : termData)\n    }));\n  };\n  const handleAddQuestion = () => {\n    setQuizData(prevData => ({\n      ...prevData,\n      terms: [...prevData.terms, {\n        term: '',\n        definition: ''\n      }]\n    }));\n  };\n  const handleRemoveQuestion = index => {\n    setQuizData(prevData => ({\n      ...prevData,\n      terms: prevData.terms.filter((_, i) => i !== index)\n    }));\n  };\n  const handleSaveChanges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\n        method: 'PUT',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save changes.');\n      }\n      navigate('/saved-quizzes');\n    } catch (error) {\n      console.log('Error saving changes:', error);\n    }\n  };\n  if (!quizData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"quizName\",\n      value: quizData.quizName,\n      onChange: e => handleChange(e, 0),\n      placeholder: \"Quiz Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizData.terms && quizData.terms.map((termData, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `term${index + 1}`,\n          value: termData.term || '',\n          onChange: e => handleChange(e, index),\n          placeholder: `Term ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: `definition${index + 1}`,\n          value: termData.definition || '',\n          onChange: e => handleChange(e, index),\n          placeholder: `Definition ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveQuestion(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(EditQuiz, \"6X0o8nKd3f1ipypzM2xo5KaMGZA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuiz","_s","quizName","navigate","quizData","setQuizData","questions","fetchQuizData","response","fetch","method","credentials","ok","Error","data","json","prevData","console","log","error","handleChange","event","index","name","value","target","terms","map","termData","i","handleAddQuestion","term","definition","handleRemoveQuestion","filter","_","handleSaveChanges","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/EditQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../../styles/quiz-page/EditQuiz.css';\r\n\r\nconst EditQuiz = () => {\r\n    const { quizName } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [quizData, setQuizData] = useState({\r\n        quizName: '',\r\n        questions: [], // Set the initial questions array to be empty\r\n      });\r\n\r\n      const fetchQuizData = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch quiz data.');\r\n          }\r\n      \r\n          const data = await response.json();\r\n      \r\n          // Assuming you receive an array of objects with 'term' and 'definition'\r\n          setQuizData((prevData) => ({\r\n            ...prevData,\r\n            questions: data,\r\n          }));\r\n      \r\n          console.log('Quizdata from js:', quizData);\r\n        } catch (error) {\r\n          console.log('Error fetching quiz data.', error);\r\n        }\r\n      };\r\n\r\n    const handleChange = (event, index) => {\r\n        const { name, value } = event.target;\r\n        setQuizData((prevData) => ({\r\n            ...prevData,\r\n            terms: prevData.terms.map((termData, i) =>\r\n                i === index ? { ...termData, [name]: value } : termData\r\n            ),\r\n        }));\r\n    };\r\n\r\n    const handleAddQuestion = () => {\r\n        setQuizData((prevData) => ({\r\n            ...prevData,\r\n            terms: [\r\n                ...prevData.terms,\r\n                {\r\n                    term: '',\r\n                    definition: '',\r\n                },\r\n            ],\r\n        }));\r\n    };\r\n\r\n    const handleRemoveQuestion = (index) => {\r\n        setQuizData((prevData) => ({\r\n            ...prevData,\r\n            terms: prevData.terms.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\r\n                method: 'PUT',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(quizData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to save changes.');\r\n            }\r\n\r\n            navigate('/saved-quizzes');\r\n        } catch (error) {\r\n            console.log('Error saving changes:', error);\r\n        }\r\n    };\r\n\r\n    if (!quizData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-quiz\">\r\n            <h2>Edit Quiz</h2>\r\n            <input\r\n                type=\"text\"\r\n                name=\"quizName\"\r\n                value={quizData.quizName}\r\n                onChange={(e) => handleChange(e, 0)}\r\n                placeholder=\"Quiz Name\"\r\n            />\r\n            <ul>\r\n                {quizData.terms && quizData.terms.map((termData, index) => (\r\n                    <li key={index}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name={`term${index + 1}`}\r\n                            value={termData.term || ''}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                            placeholder={`Term ${index + 1}`}\r\n                        />\r\n                        <textarea\r\n                            name={`definition${index + 1}`}\r\n                            value={termData.definition || ''}\r\n                            onChange={(e) => handleChange(e, index)}\r\n                            placeholder={`Definition ${index + 1}`}\r\n                        />\r\n\r\n                        <button onClick={() => handleRemoveQuestion(index)}>Remove</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={handleAddQuestion}>Add Question</button>\r\n            <button onClick={handleSaveChanges}>Save Changes</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}