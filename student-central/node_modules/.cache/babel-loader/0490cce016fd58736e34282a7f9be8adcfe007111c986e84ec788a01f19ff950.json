{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\EditQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../../styles/quiz-page/EditQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuiz = () => {\n  _s();\n  const {\n    quizName\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState({\n    quizName: '',\n    questions: [{\n      term: '',\n      definition: ''\n    }]\n  });\n  useEffect(() => {\n    // Fetch the quiz data from the server based on quizName\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch quiz data.');\n        }\n        const data = await response.json();\n        console.log('Data from server endpoint:', data);\n        if (data.length > 0) {\n          const quizData = data[0]; // Access the first element (index 0) of the data array\n\n          // Extract term and definition from quizData\n          const {\n            term,\n            definition\n          } = quizData;\n          console.log('Term:', term);\n          console.log('Definition:', definition);\n\n          // Update the state with the retrieved data\n          setQuizData({\n            quizName: '',\n            // Update this based on your use case\n            terms: [{\n              term: term || '',\n              // Provide an empty string as default value\n              definition: definition || '' // Provide an empty string as default value\n            }]\n          });\n        }\n      } catch (error) {\n        console.log('Error fetching quiz data.', error);\n      }\n    };\n    fetchQuizData();\n  }, [quizName]);\n  const handleChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.map((termData, i) => i === index ? {\n        ...termData,\n        [name]: value\n      } : termData)\n    }));\n  };\n  const handleAddQuestion = () => {\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: [...prevData.questions, {\n        term: '',\n        definition: ''\n      }]\n    }));\n  };\n  const handleRemoveQuestion = index => {\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.filter((_, i) => i !== index)\n    }));\n  };\n  const handleSaveChanges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\n        method: 'PUT',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save changes.');\n      }\n      navigate('/saved-quizzes');\n    } catch (error) {\n      console.log('Error saving changes:', error);\n    }\n  };\n  if (!quizData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"quizName\",\n      value: quizData.quizName,\n      onChange: e => handleChange(e, 0),\n      placeholder: \"Quiz Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizData.questions && quizData.questions.map((termData, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `term${index + 1}`,\n          value: termData.term || '',\n          onChange: e => handleChange(e, index),\n          placeholder: `Term ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: `definition${index + 1}`,\n          value: termData.definition || '',\n          onChange: e => handleChange(e, index),\n          placeholder: `Definition ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveQuestion(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(EditQuiz, \"4/cp6iW9YCp87No51Yd01P38eqQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuiz","_s","quizName","navigate","quizData","setQuizData","questions","term","definition","fetchQuizData","response","fetch","method","credentials","ok","Error","data","json","console","log","length","terms","error","handleChange","event","index","name","value","target","prevData","map","termData","i","handleAddQuestion","handleRemoveQuestion","filter","_","handleSaveChanges","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/EditQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../../styles/quiz-page/EditQuiz.css';\r\n\r\nconst EditQuiz = () => {\r\n  const { quizName } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [quizData, setQuizData] = useState({\r\n    quizName: '',\r\n    questions: [\r\n      {\r\n        term: '',\r\n        definition: '',\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the quiz data from the server based on quizName\r\n    const fetchQuizData = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch quiz data.');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log('Data from server endpoint:', data);\r\n    \r\n            if (data.length > 0) {\r\n                const quizData = data[0]; // Access the first element (index 0) of the data array\r\n    \r\n                // Extract term and definition from quizData\r\n                const { term, definition } = quizData;\r\n                console.log('Term:', term);\r\n                console.log('Definition:', definition);\r\n    \r\n                // Update the state with the retrieved data\r\n                setQuizData({\r\n                    quizName: '', // Update this based on your use case\r\n                    terms: [\r\n                        {\r\n                            term: term || '', // Provide an empty string as default value\r\n                            definition: definition || '', // Provide an empty string as default value\r\n                        },\r\n                    ],\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log('Error fetching quiz data.', error);\r\n        }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [quizName]);\r\n\r\n  const handleChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: prevData.questions.map((termData, i) =>\r\n        i === index ? { ...termData, [name]: value } : termData\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: [\r\n        ...prevData.questions,\r\n        {\r\n          term: '',\r\n          definition: '',\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleRemoveQuestion = (index) => {\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: prevData.questions.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\r\n        method: 'PUT',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(quizData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save changes.');\r\n      }\r\n\r\n      navigate('/saved-quizzes');\r\n    } catch (error) {\r\n      console.log('Error saving changes:', error);\r\n    }\r\n  };\r\n\r\n  if (!quizData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-quiz\">\r\n      <h2>Edit Quiz</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"quizName\"\r\n        value={quizData.quizName}\r\n        onChange={(e) => handleChange(e, 0)}\r\n        placeholder=\"Quiz Name\"\r\n      />\r\n      <ul>\r\n        {quizData.questions && quizData.questions.map((termData, index) => (\r\n          <li key={index}>\r\n            <input\r\n              type=\"text\"\r\n              name={`term${index + 1}`}\r\n              value={termData.term || ''}\r\n              onChange={(e) => handleChange(e, index)}\r\n              placeholder={`Term ${index + 1}`}\r\n            />\r\n            <textarea\r\n              name={`definition${index + 1}`}\r\n              value={termData.definition || ''}\r\n              onChange={(e) => handleChange(e, index)}\r\n              placeholder={`Definition ${index + 1}`}\r\n            />\r\n\r\n            <button onClick={() => handleRemoveQuestion(index)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleAddQuestion}>Add Question</button>\r\n      <button onClick={handleSaveChanges}>Save Changes</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuiz;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}