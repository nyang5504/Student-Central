{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\CustomQuizpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/quiz-page/CustomQuizpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizForm = () => {\n  _s();\n  const [quizName, setQuizName] = useState('');\n  const [questions, setQuestions] = useState([{\n    term: '',\n    definition: ''\n  }]);\n  console.log(quizData);\n\n  // Updates the state when changes are made in the form\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    // Updates the index in the array and the field(term/def).\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n\n  // Adds new term and definition\n  const handleAddQuestion = () => {\n    setQuestions([...questions, {\n      term: '',\n      definition: ''\n    }]);\n  };\n\n  //CHanges index and updates state\n  const handleRemoveQuestion = index => {\n    const updatedQuestions = [...questions];\n    updatedQuestions.splice(index, 1);\n    setQuestions(updatedQuestions);\n  };\n\n  // Save the Quiz in an array of arrays\n  const handleSaveQuiz = () => {\n    // Checks if the terms/def has values\n    if (quizName.trim() === '' || questions.some(q => !q.term || !q.definition)) {\n      alert('Please provide a quiz name and fill in all terms and definitions.');\n      return;\n    }\n\n    // Save the quiz data \n    const quizData = {\n      name: quizName,\n      questions\n    };\n    console.log('Quiz Data:', quizData);\n\n    // Resets the form\n    setQuizName('');\n    setQuestions([{\n      term: '',\n      definition: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customQuizpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createQuizTitle\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Custom Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quiz Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: quizName,\n        onChange: e => setQuizName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Term:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.term,\n        onChange: e => handleQuestionChange(index, 'term', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Definition:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: question.definition,\n        onChange: e => handleQuestionChange(index, 'definition', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), questions.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleRemoveQuestion(index),\n        children: \"Remove Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSaveQuiz,\n      children: \"Save Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(QuizForm, \"JOgMegoF9i/MBoH3OjtQ5K+I9R0=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizForm","_s","quizName","setQuizName","questions","setQuestions","term","definition","console","log","quizData","handleQuestionChange","index","field","value","updatedQuestions","handleAddQuestion","handleRemoveQuestion","splice","handleSaveQuiz","trim","some","q","alert","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","question","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/quiz-page/CustomQuizpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../styles/quiz-page/CustomQuizpage.css';\r\n\r\nconst QuizForm = () => {\r\n    const [quizName, setQuizName] = useState('');\r\n    const [questions, setQuestions] = useState([{ term: '', definition: '' }]);\r\n\r\n    console.log(quizData)\r\n  \r\n    // Updates the state when changes are made in the form\r\n    const handleQuestionChange = (index, field, value) => {\r\n      const updatedQuestions = [...questions];\r\n      // Updates the index in the array and the field(term/def).\r\n      updatedQuestions[index][field] = value;\r\n      setQuestions(updatedQuestions);\r\n    };\r\n  \r\n    // Adds new term and definition\r\n    const handleAddQuestion = () => {\r\n      setQuestions([...questions, { term: '', definition: '' }]);\r\n    };\r\n  \r\n    //CHanges index and updates state\r\n    const handleRemoveQuestion = (index) => {\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions.splice(index, 1);\r\n      setQuestions(updatedQuestions);\r\n    };\r\n  \r\n    // Save the Quiz in an array of arrays\r\n    const handleSaveQuiz = () => {\r\n      // Checks if the terms/def has values\r\n      if (quizName.trim() === '' || questions.some((q) => !q.term || !q.definition)) {\r\n        alert('Please provide a quiz name and fill in all terms and definitions.');\r\n        return;\r\n      }\r\n  \r\n      // Save the quiz data \r\n      const quizData = { name: quizName, questions };\r\n      console.log('Quiz Data:', quizData);\r\n  \r\n      // Resets the form\r\n      setQuizName('');\r\n      setQuestions([{ term: '', definition: '' }]);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"customQuizpage\">\r\n        <div className=\"createQuizTitle\">\r\n          <h2>Create Custom Quiz</h2>\r\n        </div>\r\n        {/*Quiz Name form*/}\r\n        <div className=\"question-container\">\r\n          <label>Quiz Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={quizName}\r\n            onChange={(e) => setQuizName(e.target.value)}\r\n          />\r\n        </div>\r\n        {/*Form and inputs for the question. Maps them out */}\r\n        {questions.map((question, index) => (\r\n          <div key={index} className=\"question-container\">\r\n            <label>Term:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={question.term}\r\n              onChange={(e) => handleQuestionChange(index, 'term', e.target.value)}\r\n            />\r\n            <label>Definition:</label>\r\n            <textarea\r\n              value={question.definition}\r\n              onChange={(e) => handleQuestionChange(index, 'definition', e.target.value)}\r\n            />\r\n            {/*If the number of questions is greater than 1, than the remove button appears */}\r\n            {questions.length > 1 && (\r\n              <button type=\"button\" onClick={() => handleRemoveQuestion(index)}>\r\n                Remove Question\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleAddQuestion}>\r\n          Add Question\r\n        </button>\r\n        <button type=\"button\" onClick={handleSaveQuiz}>\r\n          Save Quiz\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default QuizForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}