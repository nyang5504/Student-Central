{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\schedule-page\\\\Schedulepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport '../../styles/schedule-page/Schedulepage.css';\nimport Schedule from './Schedule';\nimport AddEventPopup from './AddEventPopup';\nimport AddBtn from \"../assets/add-btn.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchedulePage = () => {\n  _s();\n  //state variable and function to keep track of all events\n  const [events, setEvents] = useState([]);\n  const [mounted, setMounted] = useState(false);\n\n  //boolean to determine if the form popup is open\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  //fetches previously saved events from database\n  useEffect(() => {\n    const getData = () => {\n      try {\n        return fetch('http://localhost:4000/api/schedule/my-events', {\n          method: 'GET',\n          credentials: 'include'\n        }).then(res => res.json()).then(data => setEvents(data));\n      } catch (error) {\n        console.log(\"error getData\", error);\n      }\n    };\n    getData();\n  }, []);\n\n  //saves data to database\n  useEffect(() => {\n    const saveToDatabase = () => {\n      try {\n        // console.log(\"SAVETODATABASE\", JSON.stringify(events));\n        fetch('http://localhost:4000/api/schedule/save-events', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(events),\n          credentials: 'include'\n        });\n      } catch (error) {\n        console.log(\"error saveToDatabase\", error);\n      }\n    };\n    //if already mounted, save events to database\n    if (mounted) {\n      saveToDatabase();\n    }\n    //if mounting for the first time, dont save\n    else {\n      setMounted(true);\n    }\n  }, [events]);\n  const ToggleFormPopup = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedulepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(Schedule, {\n      myEvents: events,\n      currEvents: events,\n      updateEvents: setEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: AddBtn,\n      onClick: ToggleFormPopup,\n      id: \"add-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), isFormOpen && /*#__PURE__*/_jsxDEV(AddEventPopup, {\n      setEvents: setEvents,\n      currEvents: events,\n      toggleForm: ToggleFormPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SchedulePage, \"V4UepiMJNZXcq1jt4HnipqUiHeU=\");\n_c = SchedulePage;\nexport default SchedulePage;\nvar _c;\n$RefreshReg$(_c, \"SchedulePage\");","map":{"version":3,"names":["React","useEffect","useState","Schedule","AddEventPopup","AddBtn","jsxDEV","_jsxDEV","SchedulePage","_s","events","setEvents","mounted","setMounted","isFormOpen","setIsFormOpen","getData","fetch","method","credentials","then","res","json","data","error","console","log","saveToDatabase","headers","body","JSON","stringify","ToggleFormPopup","className","children","myEvents","currEvents","updateEvents","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","id","toggleForm","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/schedule-page/Schedulepage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport '../../styles/schedule-page/Schedulepage.css';\r\nimport Schedule from './Schedule';\r\nimport AddEventPopup from './AddEventPopup';\r\nimport AddBtn from \"../assets/add-btn.png\"\r\n\r\nconst SchedulePage = () => {\r\n\r\n    //state variable and function to keep track of all events\r\n    const [events, setEvents] = useState([]);\r\n    \r\n    const [mounted, setMounted] = useState(false);\r\n    \r\n    //boolean to determine if the form popup is open\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n    //fetches previously saved events from database\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            try{\r\n                return fetch('http://localhost:4000/api/schedule/my-events', {\r\n                    method:'GET',\r\n                    credentials: 'include'\r\n                })\r\n                .then(res => res.json())\r\n                .then(data => setEvents(data));\r\n            } catch (error) {\r\n                console.log(\"error getData\", error);\r\n            }\r\n        }\r\n        getData()\r\n    },[])\r\n\r\n    //saves data to database\r\n    useEffect(() => {\r\n        const saveToDatabase = () => {\r\n            try{\r\n                // console.log(\"SAVETODATABASE\", JSON.stringify(events));\r\n                    fetch('http://localhost:4000/api/schedule/save-events', {\r\n                    method:'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(events),\r\n                    credentials: 'include'\r\n                })\r\n            } catch (error) {\r\n                console.log(\"error saveToDatabase\", error);\r\n            }\r\n        }\r\n        //if already mounted, save events to database\r\n        if(mounted){\r\n            saveToDatabase();\r\n        }\r\n        //if mounting for the first time, dont save\r\n        else{\r\n            setMounted(true);\r\n        }\r\n    }, [events]);\r\n\r\n    const ToggleFormPopup = () => {\r\n        setIsFormOpen(!isFormOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"schedulepage-container\">\r\n            {/* component that includes that calendar itself */}\r\n            <Schedule myEvents={events} currEvents={events} updateEvents={setEvents}/>\r\n            {/* image of a plus sign to add events */}\r\n            <img src={AddBtn} onClick={ToggleFormPopup} id=\"add-btn\"/>\r\n            {/* AddEventPopup component will only show if isFormOpen variable is true */}\r\n            {isFormOpen && \r\n                <AddEventPopup \r\n                    setEvents={setEvents}\r\n                    currEvents={events}\r\n                    toggleForm={ToggleFormPopup}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SchedulePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,6CAA6C;AACpD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMe,OAAO,GAAGA,CAAA,KAAM;MAClB,IAAG;QACC,OAAOC,KAAK,CAAC,8CAA8C,EAAE;UACzDC,MAAM,EAAC,KAAK;UACZC,WAAW,EAAE;QACjB,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,SAAS,CAACY,IAAI,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;MACvC;IACJ,CAAC;IACDR,OAAO,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;;EAEL;EACAf,SAAS,CAAC,MAAM;IACZ,MAAM0B,cAAc,GAAGA,CAAA,KAAM;MACzB,IAAG;QACC;QACIV,KAAK,CAAC,gDAAgD,EAAE;UACxDC,MAAM,EAAC,MAAM;UACbU,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC;UAC5BS,WAAW,EAAE;QACjB,CAAC,CAAC;MACN,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC9C;IACJ,CAAC;IACD;IACA,IAAGZ,OAAO,EAAC;MACPe,cAAc,CAAC,CAAC;IACpB;IACA;IAAA,KACI;MACAd,UAAU,CAAC,IAAI,CAAC;IACpB;EACJ,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMsB,eAAe,GAAGA,CAAA,KAAM;IAC1BjB,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIP,OAAA;IAAK0B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAEnC3B,OAAA,CAACJ,QAAQ;MAACgC,QAAQ,EAAEzB,MAAO;MAAC0B,UAAU,EAAE1B,MAAO;MAAC2B,YAAY,EAAE1B;IAAU;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE1ElC,OAAA;MAAKmC,GAAG,EAAErC,MAAO;MAACsC,OAAO,EAAEX,eAAgB;MAACY,EAAE,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEzD3B,UAAU,iBACPP,OAAA,CAACH,aAAa;MACVO,SAAS,EAAEA,SAAU;MACrByB,UAAU,EAAE1B,MAAO;MACnBmC,UAAU,EAAEb;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEd,CAAC;AAAChC,EAAA,CAzEID,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA2ElB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}