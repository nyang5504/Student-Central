{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import Sidebar from'./Sidebar';import NoteSection from'./NoteSection';import NoteList from'./NoteList';import'../../styles/todo-page/TodoPage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoPage=function TodoPage(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedFolder=_useState2[0],setSelectedFolder=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedNote=_useState4[0],setSelectedNote=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),folderNotes=_useState6[0],setFolderNotes=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isFolderDeleted=_useState8[0],setIsFolderDeleted=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),mounted=_useState10[0],setMounted=_useState10[1];var navigate=useNavigate();console.log(folderNotes);// Function to create new folder, uses spread operator to create copy\nvar handleAddFolder=function handleAddFolder(folderName){setFolderNotes(function(prevNotes){return _objectSpread(_objectSpread({},prevNotes),{},_defineProperty({},folderName,[]));});};// Function to add note object to folder\nvar handleAddNoteToFolder=function handleAddNoteToFolder(folderName,note){// Spread operator to create copy\nsetFolderNotes(function(prevNotes){return _objectSpread(_objectSpread({},prevNotes),{},_defineProperty({},folderName,[].concat(_toConsumableArray(prevNotes[folderName]||[]),[note])));});};// Function to delete a note\nvar deleteNote=function deleteNote(folderName,noteToDelete){setFolderNotes(function(prevNotes){return _objectSpread(_objectSpread({},prevNotes),{},_defineProperty({},folderName,prevNotes[folderName].filter(function(note){return note!==noteToDelete;})));});};// Function to delete a folder and it's notes\nvar deleteFolder=function deleteFolder(folderName){// Remove the folder and its notes\nsetFolderNotes(function(prevNotes){var updatedNotes=_objectSpread({},prevNotes);delete updatedNotes[folderName];setSelectedNote(null);//Render the new folders in the Sidebar\nreturn updatedNotes;});// Reset the selected folder and note if they were deleted\nif(selectedFolder===folderName){setSelectedFolder(null);setSelectedNote(null);setIsFolderDeleted(true);}};useEffect(function(){var saveFolders=function saveFolders(){try{console.log(\"SAVETODATABASE\",JSON.stringify(folderNotes));fetch('http://localhost:4000/api/schedule/save-folders',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(folderNotes),credentials:'include'});}catch(error){console.log(\"error saveFolders\",error);}};if(mounted){saveFolders();}//if mounting for the first time, dont save\nelse{setMounted(true);}},[folderNotes]);useEffect(function(){var getFolders=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('http://localhost:4000/api/schedule/my-folders',{method:'GET',credentials:'include'});case 3:response=_context.sent;if(!(response.status===401)){_context.next=7;break;}navigate('/login');return _context.abrupt(\"return\");case 7:if(!response.ok){_context.next=14;break;}_context.next=10;return response.json();case 10:data=_context.sent;setFolderNotes(data);_context.next=15;break;case 14:console.error('Error fetching folders:',response.status);case 15:_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);console.error('Error fetching folders:',_context.t0);case 20:case\"end\":return _context.stop();}},_callee,null,[[0,17]]);}));return function getFolders(){return _ref.apply(this,arguments);};}();getFolders();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"todo-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"todo-content\",children:[/*#__PURE__*/_jsx(Sidebar//Pass down props from Sidebar.js\n,{setSelectedFolder:setSelectedFolder,folders:Object.keys(folderNotes),onAddFolder:handleAddFolder,onDeleteFolder:deleteFolder,selectedFolder:selectedFolder}),/*#__PURE__*/_jsx(NoteList// Pass down props to NotesList.js\n,{selectedFolder:selectedFolder,folderNotes:folderNotes,selectedNote:selectedNote,setSelectedNote:setSelectedNote,onAddNoteToFolder:handleAddNoteToFolder,setFolderNotes:setFolderNotes,onDeleteNote:deleteNote,isFolderDeleted:isFolderDeleted}),/*#__PURE__*/_jsx(NoteSection// Pass down props from NoteSection.js\n,{selectedFolder:selectedFolder,selectedNote:selectedNote,folderNotes:folderNotes,setSelectedNote:setSelectedNote,setFolderNotes:setFolderNotes})]})});};export default TodoPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","NoteSection","NoteList","jsx","_jsx","jsxs","_jsxs","TodoPage","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","_useState3","_useState4","selectedNote","setSelectedNote","_useState5","_useState6","folderNotes","setFolderNotes","_useState7","_useState8","isFolderDeleted","setIsFolderDeleted","_useState9","_useState10","mounted","setMounted","navigate","console","log","handleAddFolder","folderName","prevNotes","_objectSpread","_defineProperty","handleAddNoteToFolder","note","concat","_toConsumableArray","deleteNote","noteToDelete","filter","deleteFolder","updatedNotes","saveFolders","JSON","stringify","fetch","method","headers","body","credentials","error","getFolders","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","sent","status","abrupt","ok","json","t0","stop","apply","arguments","className","children","folders","Object","keys","onAddFolder","onDeleteFolder","onAddNoteToFolder","onDeleteNote"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/todo-page/TodoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Sidebar from './Sidebar';\r\nimport NoteSection from './NoteSection';\r\nimport NoteList from './NoteList';\r\nimport '../../styles/todo-page/TodoPage.css';\r\n\r\nconst TodoPage = () => {\r\n  const [selectedFolder, setSelectedFolder] = useState(null);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const [folderNotes, setFolderNotes] = useState({});\r\n\r\n  const [isFolderDeleted, setIsFolderDeleted] = useState(false);\r\n\r\n  const [mounted, setMounted] = useState(false);\r\n  const navigate = useNavigate();\r\n  console.log(folderNotes);\r\n  // Function to create new folder, uses spread operator to create copy\r\n  const handleAddFolder = (folderName) => {\r\n    setFolderNotes((prevNotes) => ({\r\n      ...prevNotes,\r\n      // creates empty array\r\n      [folderName]: [],\r\n    }));\r\n  };\r\n\r\n\r\n  // Function to add note object to folder\r\n  const handleAddNoteToFolder = (folderName, note) => {\r\n    // Spread operator to create copy\r\n    setFolderNotes((prevNotes) => ({\r\n      ...prevNotes,\r\n      // Combine previous notes array with new notes object \r\n      [folderName]: [...(prevNotes[folderName] || []), note],\r\n    }));\r\n  };\r\n\r\n  // Function to delete a note\r\n  const deleteNote = (folderName, noteToDelete) => {\r\n    setFolderNotes((prevNotes) => ({\r\n      ...prevNotes,\r\n      // Find the note in the folder using filter\r\n      [folderName]: prevNotes[folderName].filter((note) => note !== noteToDelete),\r\n    }));\r\n  };\r\n\r\n  // Function to delete a folder and it's notes\r\nconst deleteFolder = (folderName) => {\r\n  // Remove the folder and its notes\r\n  setFolderNotes((prevNotes) => {\r\n    const updatedNotes = { ...prevNotes };\r\n    delete updatedNotes[folderName];\r\n    setSelectedNote(null);\r\n    //Render the new folders in the Sidebar\r\n    return updatedNotes;\r\n  });\r\n\r\n  // Reset the selected folder and note if they were deleted\r\n  if (selectedFolder === folderName) {\r\n    setSelectedFolder(null);\r\n    setSelectedNote(null);\r\n    setIsFolderDeleted(true);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  const saveFolders = () => {\r\n    try{\r\n      console.log(\"SAVETODATABASE\", JSON.stringify(folderNotes));\r\n          fetch('http://localhost:4000/api/schedule/save-folders', {\r\n          method:'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(folderNotes),\r\n          credentials: 'include'\r\n      })\r\n    } catch (error) {\r\n        console.log(\"error saveFolders\", error);\r\n    }\r\n\r\n  }\r\n  if(mounted){\r\n    saveFolders();\r\n  }\r\n  //if mounting for the first time, dont save\r\n  else{\r\n    setMounted(true);\r\n  }\r\n  \r\n}, [folderNotes])\r\n\r\nuseEffect(() => {\r\n  const getFolders = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/schedule/my-folders', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (response.status === 401) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFolderNotes(data);\r\n      } else {\r\n        console.error('Error fetching folders:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching folders:', error);\r\n    }\r\n  };\r\n\r\n  getFolders();\r\n}, []);\r\n\r\nreturn (\r\n  <div className=\"todo-page\">\r\n    <div className=\"todo-content\">\r\n      <Sidebar\r\n        //Pass down props from Sidebar.js\r\n        setSelectedFolder={setSelectedFolder}\r\n        folders={Object.keys(folderNotes)}\r\n        onAddFolder={handleAddFolder}\r\n        onDeleteFolder={deleteFolder}\r\n        selectedFolder={selectedFolder}\r\n      />\r\n      <NoteList\r\n        // Pass down props to NotesList.js\r\n        selectedFolder={selectedFolder}\r\n        folderNotes={folderNotes}\r\n        selectedNote={selectedNote}\r\n        setSelectedNote={setSelectedNote}\r\n        onAddNoteToFolder={handleAddNoteToFolder}\r\n        setFolderNotes={setFolderNotes}\r\n        onDeleteNote={deleteNote}\r\n        isFolderDeleted={isFolderDeleted}\r\n      />\r\n      <NoteSection\r\n        // Pass down props from NoteSection.js\r\n        selectedFolder={selectedFolder}\r\n        selectedNote={selectedNote}\r\n        folderNotes={folderNotes}\r\n        setSelectedNote={setSelectedNote}\r\n        setFolderNotes={setFolderNotes}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default TodoPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}