{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useParams,useNavigate,useLocation,Link}from'react-router-dom';import'../../styles/quiz-page/StartQuizpage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StartQuizPage=function StartQuizPage(props){var location=useLocation();var _useParams=useParams(),quizName=_useParams.quizName;var navigate=useNavigate();var prevLocation=location.state.prevPath;var quizCreator=location.state.creator;console.log(\"prevLocation\",location.state.prevPath);console.log(\"creator\",location.state.creator);// Variable and structure for quiz questions\nvar _useState=useState({quizName:'',questions:[{term:'',definition:''}]}),_useState2=_slicedToArray(_useState,2),quizData=_useState2[0],setQuizData=_useState2[1];// Track what type of quiz is being selected\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),quizType=_useState4[0],setQuizType=_useState4[1];useEffect(function(){var fetchQuizDataUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,_quizData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:4000/api/quiz/get-one-quiz/\".concat(quizName),{method:'GET',credentials:'include'});case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error('Failed to fetch quiz data.');case 6:_context.next=8;return response.json();case 8:data=_context.sent;_quizData={quizName:quizName,questions:data.questions.map(function(question){return{term:question.term||'',definition:question.definition||''};})};setQuizData(_quizData);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);console.log('Error fetching quiz data.',_context.t0);case 16:case\"end\":return _context.stop();}},_callee,null,[[0,13]]);}));return function fetchQuizDataUser(){return _ref.apply(this,arguments);};}();var fetchQuizDataSearch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(creator){var response,data,_quizData2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"http://localhost:4000/api/quiz/one-quiz-from-all/\".concat(quizName,\"/\").concat(creator),{method:'GET',credentials:'include'});case 3:response=_context2.sent;if(response.ok){_context2.next=6;break;}throw new Error('Failed to fetch quiz data.');case 6:_context2.next=8;return response.json();case 8:data=_context2.sent;_quizData2={quizName:quizName,questions:data.questions.map(function(question){return{term:question.term||'',definition:question.definition||''};})};setQuizData(_quizData2);_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);console.log('Error fetching quiz data.',_context2.t0);case 16:case\"end\":return _context2.stop();}},_callee2,null,[[0,13]]);}));return function fetchQuizDataSearch(_x){return _ref2.apply(this,arguments);};}();if(!quizCreator){fetchQuizDataUser();}else{fetchQuizDataSearch(quizCreator);}// fetchQuizData();\n},[quizName]);var handleQuizTypeSelection=function handleQuizTypeSelection(quizType){// Set the quizType when the user selects a quiz type\nsetQuizType(quizType);// Navigate to the QuizQuestions.js with url as the quiz type\nnavigate(\"/quiz/\".concat(quizName,\"/questions?type=\").concat(quizType),{state:{prevPath:location.pathname,creator:quizCreator}});// <Link to={`/quiz/${quizName}/questions?type=${quizType}`}\n//       state={{prevPath: location.pathname, creator: quizCreator}}></Link>\n};return/*#__PURE__*/_jsx(\"div\",{className:\"startQuiz-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"startQuiz-container-contents\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"Type\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select Quiz Type:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleQuizTypeSelection('multipleChoice');},className:\"quiz-type-btn \".concat(quizType==='multipleChoice'?'selected':''),children:\"Multiple Choice\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleQuizTypeSelection('written');},className:\"quiz-type-btn \".concat(quizType==='written'?'selected':''),children:\"Written Question\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleQuizTypeSelection('both');},className:\"quiz-type-btn \".concat(quizType==='both'?'selected':''),children:\"Both\"})]})})});};export default StartQuizPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","Link","jsx","_jsx","jsxs","_jsxs","StartQuizPage","props","location","_useParams","quizName","navigate","prevLocation","state","prevPath","quizCreator","creator","console","log","_useState","questions","term","definition","_useState2","_slicedToArray","quizData","setQuizData","_useState3","_useState4","quizType","setQuizType","fetchQuizDataUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","_quizData","wrap","_callee$","_context","prev","next","fetch","concat","method","credentials","sent","ok","Error","json","map","question","t0","stop","apply","arguments","fetchQuizDataSearch","_ref2","_callee2","_quizData2","_callee2$","_context2","_x","handleQuizTypeSelection","pathname","className","children","onClick"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/quiz-page/StartQuizpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport '../../styles/quiz-page/StartQuizpage.css';\r\n\r\nconst StartQuizPage = (props) => {\r\n    const location = useLocation();\r\n\r\n    const { quizName } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const prevLocation = location.state.prevPath;\r\n    const quizCreator = location.state.creator;\r\n\r\n    console.log(\"prevLocation\", location.state.prevPath);\r\n     console.log(\"creator\", location.state.creator);\r\n\r\n    // Variable and structure for quiz questions\r\n    const [quizData, setQuizData] = useState({\r\n        quizName: '',\r\n        questions: [\r\n            {\r\n                term: '',\r\n                definition: '',\r\n            },\r\n        ],\r\n    });\r\n\r\n    // Track what type of quiz is being selected\r\n    const [quizType, setQuizType] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuizDataUser = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch quiz data.');\r\n                }\r\n\r\n                const data = await response.json();\r\n                const quizData = {\r\n                    quizName: quizName,\r\n                    questions: data.questions.map((question) => ({\r\n                        term: question.term || '',\r\n                        definition: question.definition || '',\r\n                    })),\r\n                };\r\n                setQuizData(quizData);\r\n            } catch (error) {\r\n                console.log('Error fetching quiz data.', error);\r\n            }\r\n        };\r\n\r\n        const fetchQuizDataSearch = async (creator) => {\r\n            try {\r\n                const response = await fetch(`http://localhost:4000/api/quiz/one-quiz-from-all/${quizName}/${creator}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch quiz data.');\r\n                }\r\n\r\n                const data = await response.json();\r\n                const quizData = {\r\n                    quizName: quizName,\r\n                    questions: data.questions.map((question) => ({\r\n                        term: question.term || '',\r\n                        definition: question.definition || '',\r\n                    })),\r\n                };\r\n                setQuizData(quizData);\r\n            } catch (error) {\r\n                console.log('Error fetching quiz data.', error);\r\n            }\r\n        };\r\n\r\n        if(!quizCreator){\r\n            fetchQuizDataUser();\r\n        }\r\n        else{\r\n            fetchQuizDataSearch(quizCreator);\r\n        }\r\n        // fetchQuizData();\r\n    }, [quizName]);\r\n\r\n    const handleQuizTypeSelection = (quizType) => {\r\n        // Set the quizType when the user selects a quiz type\r\n        setQuizType(quizType);\r\n\r\n        // Navigate to the QuizQuestions.js with url as the quiz type\r\n        navigate(`/quiz/${quizName}/questions?type=${quizType}`, {\r\n            state:{prevPath: location.pathname, creator: quizCreator}\r\n        });\r\n        // <Link to={`/quiz/${quizName}/questions?type=${quizType}`}\r\n        //       state={{prevPath: location.pathname, creator: quizCreator}}></Link>\r\n    };\r\n\r\n    return (\r\n        <div className=\"startQuiz-container\">\r\n            <div className=\"startQuiz-container-contents\">\r\n            <div className='Type'>\r\n                <p>Select Quiz Type:</p>\r\n                <button\r\n                    onClick={() => handleQuizTypeSelection('multipleChoice')}\r\n                    className={`quiz-type-btn ${quizType === 'multipleChoice' ? 'selected' : ''}`}\r\n                >\r\n                    Multiple Choice\r\n                </button>\r\n                <button\r\n                    onClick={() => handleQuizTypeSelection('written')}\r\n                    className={`quiz-type-btn ${quizType === 'written' ? 'selected' : ''}`}\r\n                >\r\n                    Written Question\r\n                </button>\r\n                <button\r\n                    onClick={() => handleQuizTypeSelection('both')}\r\n                    className={`quiz-type-btn ${quizType === 'both' ? 'selected' : ''}`}\r\n                >\r\n                    Both\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartQuizPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}