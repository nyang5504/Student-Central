{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\NoteList.js\";\nimport React from 'react';\nimport addButton from '../assets/add-button.PNG';\nimport deleteButton from '../assets/delete-button.PNG';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteList = _ref => {\n  let {\n    selectedFolder,\n    folderNotes,\n    selectedNote,\n    setSelectedNote,\n    onAddNoteToFolder,\n    onDeleteNote,\n    isFolderDeleted\n  } = _ref;\n  // Function to handle adding a new note\n  const handleAddNote = () => {\n    const newNote = {\n      title: 'New Note',\n      content: ''\n    };\n    // Call the onAddNoteToFolder function to add the new note to the selected folder\n    onAddNoteToFolder(selectedFolder, newNote);\n    // Set the new note as the selected note\n    setSelectedNote(newNote);\n  };\n\n  // Function to handle deleting a note\n  const handleDeleteNote = note => {\n    // Call the onDeleteNote function to remove the note from the folder's notes array\n    onDeleteNote(selectedFolder, note);\n    // If the selected note is the one being deleted, clear the selected note\n    if (selectedNote === note) {\n      setSelectedNote(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-list\",\n    children: isFolderDeleted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No folder selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : selectedFolder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"All Notes in \", selectedFolder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), folderNotes[selectedFolder] && folderNotes[selectedFolder].length > 0 ? folderNotes[selectedFolder].map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `note ${selectedNote === note ? 'selected-note' : ''}`,\n        onClick: () => setSelectedNote(note),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDeleteNote(note),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteButton,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notes available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddNote,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addButton,\n          alt: \"Add Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No folder selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","addButton","deleteButton","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteList","_ref","selectedFolder","folderNotes","selectedNote","setSelectedNote","onAddNoteToFolder","onDeleteNote","isFolderDeleted","handleAddNote","newNote","title","content","handleDeleteNote","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/NoteList.js"],"sourcesContent":["import React from 'react';\r\nimport addButton from '../assets/add-button.PNG';\r\nimport deleteButton from '../assets/delete-button.PNG';\r\n\r\n\r\nconst NoteList = ({ selectedFolder, folderNotes, selectedNote, setSelectedNote, onAddNoteToFolder, onDeleteNote, isFolderDeleted }) => {\r\n  // Function to handle adding a new note\r\n  const handleAddNote = () => {\r\n    const newNote = {\r\n      title: 'New Note',\r\n      content: '',\r\n    };\r\n    // Call the onAddNoteToFolder function to add the new note to the selected folder\r\n    onAddNoteToFolder(selectedFolder, newNote);\r\n    // Set the new note as the selected note\r\n    setSelectedNote(newNote);\r\n  };\r\n\r\n  // Function to handle deleting a note\r\n  const handleDeleteNote = (note) => {\r\n    // Call the onDeleteNote function to remove the note from the folder's notes array\r\n    onDeleteNote(selectedFolder, note);\r\n    // If the selected note is the one being deleted, clear the selected note\r\n    if (selectedNote === note) {\r\n      setSelectedNote(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {isFolderDeleted ? (\r\n        <p>No folder selected.</p>\r\n      ) : selectedFolder ? (\r\n        <>\r\n          <h2>All Notes in {selectedFolder}</h2>\r\n          {folderNotes[selectedFolder] && folderNotes[selectedFolder].length > 0 ? (\r\n            folderNotes[selectedFolder].map((note, index) => (\r\n              <div\r\n                key={index}\r\n                className={`note ${selectedNote === note ? 'selected-note' : ''}`}\r\n                onClick={() => setSelectedNote(note)}\r\n              >\r\n                <button className=\"delete-button\" onClick={() => handleDeleteNote(note)}>\r\n                  <img src={deleteButton} alt=\"Delete\" />\r\n                </button>\r\n                <div>\r\n                  <h3>{note.title}</h3>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No notes available.</p>\r\n          )}\r\n          <button className=\"add-button\" onClick={handleAddNote}>\r\n            <img src={addButton} alt=\"Add Note\" />\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <p>No folder selected.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}