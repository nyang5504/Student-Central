{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\NoteSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteSection = _ref => {\n  _s();\n  let {\n    selectedNote,\n    setSelectedNote,\n    folderNotes,\n    selectedFolder,\n    setFolderNotes\n  } = _ref;\n  const [noteContent, setNoteContent] = useState('');\n  const [noteTitle, setNoteTitle] = useState('');\n\n  // Use effect to update ReactQuill to show saved note content and title\n  useEffect(() => {\n    if (selectedNote) {\n      setNoteTitle(selectedNote.title);\n      setNoteContent(selectedNote.content);\n    } else {\n      setNoteTitle('');\n      setNoteContent('');\n    }\n  }, [selectedNote]);\n\n  // Function to handle updating the selected note\n  const updateNote = () => {\n    //Check if there's a selected note\n    if (selectedNote) {\n      // Takes new note information\n      const updatedNote = {\n        ...selectedNote,\n        title: noteTitle,\n        content: noteContent\n      };\n\n      // Find the index of the selected note in the array of folderNotes\n      const index = folderNotes[selectedFolder].findIndex(note => note === selectedNote);\n\n      //Checks if the index is valid\n      if (index !== -1) {\n        // Creates copy of the array of notes in the folder\n        const updatedFolderNotes = [...folderNotes[selectedFolder]];\n        // Updates the note\n        updatedFolderNotes[index] = updatedNote;\n\n        // Update the folder state with the updated array of notes\n        setFolderNotes(prevNotes => ({\n          ...prevNotes,\n          [selectedFolder]: updatedFolderNotes\n        }));\n        setSelectedNote(updatedNote);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-section\",\n    children: selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: noteTitle,\n        onChange: e => setNoteTitle(e.target.value),\n        placeholder: \"Note Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: noteContent,\n        onChange: setNoteContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateNote,\n        children: \"Update Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No note selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteSection, \"s5lGDcy9EwltQIe+RRz5OMkva14=\");\n_c = NoteSection;\nexport default NoteSection;\nvar _c;\n$RefreshReg$(_c, \"NoteSection\");","map":{"version":3,"names":["React","useState","useEffect","ReactQuill","jsxDEV","_jsxDEV","NoteSection","_ref","_s","selectedNote","setSelectedNote","folderNotes","selectedFolder","setFolderNotes","noteContent","setNoteContent","noteTitle","setNoteTitle","title","content","updateNote","updatedNote","index","findIndex","note","updatedFolderNotes","prevNotes","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/NoteSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst NoteSection = ({ selectedNote, setSelectedNote, folderNotes, selectedFolder, setFolderNotes }) => {\r\n  const [noteContent, setNoteContent] = useState('');\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n\r\n  // Use effect to update ReactQuill to show saved note content and title\r\n  useEffect(() => {\r\n    if (selectedNote) {\r\n      setNoteTitle(selectedNote.title);\r\n      setNoteContent(selectedNote.content);\r\n    } else {\r\n      setNoteTitle('');\r\n      setNoteContent('');\r\n    }\r\n  }, [selectedNote]);\r\n\r\n  // Function to handle updating the selected note\r\n  const updateNote = () => {\r\n    //Check if there's a selected note\r\n    if (selectedNote) {\r\n      // Takes new note information\r\n      const updatedNote = {\r\n        ...selectedNote,\r\n        title: noteTitle,\r\n        content: noteContent,\r\n      };\r\n\r\n      // Find the index of the selected note in the array of folderNotes\r\n      const index = folderNotes[selectedFolder].findIndex((note) => note === selectedNote);\r\n\r\n      //Checks if the index is valid\r\n      if (index !== -1) {\r\n        // Creates copy of the array of notes in the folder\r\n        const updatedFolderNotes = [...folderNotes[selectedFolder]];\r\n        // Updates the note\r\n        updatedFolderNotes[index] = updatedNote;\r\n\r\n        // Update the folder state with the updated array of notes\r\n        setFolderNotes((prevNotes) => ({\r\n          ...prevNotes,\r\n          [selectedFolder]: updatedFolderNotes,\r\n        }));\r\n        setSelectedNote(updatedNote);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-section\">\r\n      {/* Condition to check if there's a selected note */}\r\n      {selectedNote ? (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={noteTitle}\r\n            onChange={(e) => setNoteTitle(e.target.value)}\r\n            placeholder=\"Note Title\"\r\n          />\r\n          <ReactQuill value={noteContent} onChange={setNoteContent} />\r\n          <button onClick={updateNote}>Update Note</button>\r\n        </div>\r\n      ) : (\r\n        <p>No note selected.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}