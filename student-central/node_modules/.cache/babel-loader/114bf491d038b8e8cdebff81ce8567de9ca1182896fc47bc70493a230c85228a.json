{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\Schedule.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport \"../styles/Schedule.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = props => {\n  const onEventClick = e => {\n    console.log(e.event.title);\n    console.log(e.event.start);\n    console.log(e.event.end);\n    const eventTitle = e.event.title;\n    const eventStart = e.event.start;\n    const eventEnd = e.event.end;\n    console.log((eventStart.getMonth() + 1).toString());\n  };\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: props.myEvents,\n    selectable: true,\n    eventClick: onEventClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","Schedule","props","onEventClick","e","console","log","event","title","start","end","eventTitle","eventStart","eventEnd","getMonth","toString","plugins","initialView","events","myEvents","selectable","eventClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/Schedule.js"],"sourcesContent":["import React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport \"../styles/Schedule.css\"\r\n\r\nconst Schedule = (props) => {\r\n\r\n    const onEventClick = (e) => {\r\n        console.log(e.event.title);\r\n        console.log(e.event.start);\r\n        console.log(e.event.end);\r\n        const eventTitle = e.event.title;\r\n        const eventStart = e.event.start;\r\n        const eventEnd = e.event.end;\r\n\r\n        console.log((eventStart.getMonth()+1).toString())\r\n\r\n    }\r\n\r\n    return (\r\n        <FullCalendar\r\n            plugins={[dayGridPlugin]}\r\n            initialView='dayGridMonth'\r\n            events={\r\n                props.myEvents\r\n            }\r\n            selectable={true}\r\n            eventClick={onEventClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Schedule;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,KAAK,CAACC,KAAK,CAAC;IAC1BH,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,KAAK,CAACE,KAAK,CAAC;IAC1BJ,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,KAAK,CAACG,GAAG,CAAC;IACxB,MAAMC,UAAU,GAAGP,CAAC,CAACG,KAAK,CAACC,KAAK;IAChC,MAAMI,UAAU,GAAGR,CAAC,CAACG,KAAK,CAACE,KAAK;IAChC,MAAMI,QAAQ,GAAGT,CAAC,CAACG,KAAK,CAACG,GAAG;IAE5BL,OAAO,CAACC,GAAG,CAAC,CAACM,UAAU,CAACE,QAAQ,CAAC,CAAC,GAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAAC;EAErD,CAAC;EAED,oBACIf,OAAA,CAACH,YAAY;IACTmB,OAAO,EAAE,CAAClB,aAAa,CAAE;IACzBmB,WAAW,EAAC,cAAc;IAC1BC,MAAM,EACFhB,KAAK,CAACiB,QACT;IACDC,UAAU,EAAE,IAAK;IACjBC,UAAU,EAAElB;EAAa;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBIzB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}