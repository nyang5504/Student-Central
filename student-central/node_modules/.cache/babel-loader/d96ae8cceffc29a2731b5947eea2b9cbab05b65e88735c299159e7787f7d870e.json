{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\WrittenChoice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WrittenChoice = props => {\n  _s();\n  const {\n    question,\n    currentQuestionIndex,\n    setAllUserAns,\n    allUserAns\n  } = props;\n  const [userAnswer, setUserAnswer] = useState('');\n\n  // Set the userAnswer state to the value from allUserAns when the question changes\n  useEffect(() => {\n    setUserAnswer(allUserAns[currentQuestionIndex] || '');\n  }, [allUserAns, currentQuestionIndex]);\n\n  // Update the userAnswer state when the user types in the input box\n  const handleInputChange = event => {\n    setUserAnswer(event.target.value);\n  };\n\n  // Save the user's answer when moving to the next question\n  const handleNextQuestion = () => {\n    setAllUserAns(prevAnswers => {\n      const updatedAnswers = [...prevAnswers];\n      updatedAnswers[currentQuestionIndex] = userAnswer;\n      return updatedAnswers;\n    });\n    props.setCurrentQuestionCount(prevIndex => prevIndex + 1);\n  };\n\n  // Save the user's answer when moving to the previous question\n  const handlePreviousQuestion = () => {\n    setAllUserAns(prevAnswers => {\n      const updatedAnswers = [...prevAnswers];\n      updatedAnswers[currentQuestionIndex] = userAnswer;\n      return updatedAnswers;\n    });\n    props.setCurrentQuestionCount(prevIndex => prevIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WrittenChoice-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userAnswer,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WrittenChoice, \"MwDrCBlptFziPXA+maeBr/G9m08=\");\n_c = WrittenChoice;\nexport default WrittenChoice;\nvar _c;\n$RefreshReg$(_c, \"WrittenChoice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WrittenChoice","props","_s","question","currentQuestionIndex","setAllUserAns","allUserAns","userAnswer","setUserAnswer","handleInputChange","event","target","value","handleNextQuestion","prevAnswers","updatedAnswers","setCurrentQuestionCount","prevIndex","handlePreviousQuestion","className","children","term","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/WrittenChoice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WrittenChoice = (props) => {\r\n  const { question, currentQuestionIndex, setAllUserAns, allUserAns } = props;\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n\r\n  // Set the userAnswer state to the value from allUserAns when the question changes\r\n  useEffect(() => {\r\n    setUserAnswer(allUserAns[currentQuestionIndex] || '');\r\n  }, [allUserAns, currentQuestionIndex]);\r\n\r\n  // Update the userAnswer state when the user types in the input box\r\n  const handleInputChange = (event) => {\r\n    setUserAnswer(event.target.value);\r\n  };\r\n\r\n  // Save the user's answer when moving to the next question\r\n  const handleNextQuestion = () => {\r\n    setAllUserAns((prevAnswers) => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[currentQuestionIndex] = userAnswer;\r\n      return updatedAnswers;\r\n    });\r\n\r\n    props.setCurrentQuestionCount((prevIndex) => prevIndex + 1);\r\n  };\r\n\r\n  // Save the user's answer when moving to the previous question\r\n  const handlePreviousQuestion = () => {\r\n    setAllUserAns((prevAnswers) => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[currentQuestionIndex] = userAnswer;\r\n      return updatedAnswers;\r\n    });\r\n\r\n    props.setCurrentQuestionCount((prevIndex) => prevIndex - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"WrittenChoice-container\">\r\n      <h3>{question.term}</h3>\r\n      <div className=\"answer-input\">\r\n        <input type=\"text\" value={userAnswer} onChange={handleInputChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrittenChoice;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM;IAAEC,QAAQ;IAAEC,oBAAoB;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGL,KAAK;EAC3E,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACdW,aAAa,CAACF,UAAU,CAACF,oBAAoB,CAAC,IAAI,EAAE,CAAC;EACvD,CAAC,EAAE,CAACE,UAAU,EAAEF,oBAAoB,CAAC,CAAC;;EAEtC;EACA,MAAMK,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,aAAa,CAAES,WAAW,IAAK;MAC7B,MAAMC,cAAc,GAAG,CAAC,GAAGD,WAAW,CAAC;MACvCC,cAAc,CAACX,oBAAoB,CAAC,GAAGG,UAAU;MACjD,OAAOQ,cAAc;IACvB,CAAC,CAAC;IAEFd,KAAK,CAACe,uBAAuB,CAAEC,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnCb,aAAa,CAAES,WAAW,IAAK;MAC7B,MAAMC,cAAc,GAAG,CAAC,GAAGD,WAAW,CAAC;MACvCC,cAAc,CAACX,oBAAoB,CAAC,GAAGG,UAAU;MACjD,OAAOQ,cAAc;IACvB,CAAC,CAAC;IAEFd,KAAK,CAACe,uBAAuB,CAAEC,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC7D,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCrB,OAAA;MAAAqB,QAAA,EAAKjB,QAAQ,CAACkB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxB1B,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BrB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACd,KAAK,EAAEL,UAAW;QAACoB,QAAQ,EAAElB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5CIF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}