{"ast":null,"code":"import React from'react';import addButton from'../../assets/add-button.PNG';import deleteButton from'../../assets/delete-button.PNG';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NoteList=function NoteList(_ref){var selectedFolder=_ref.selectedFolder,folderNotes=_ref.folderNotes,selectedNote=_ref.selectedNote,setSelectedNote=_ref.setSelectedNote,onAddNoteToFolder=_ref.onAddNoteToFolder,onDeleteNote=_ref.onDeleteNote,isFolderDeleted=_ref.isFolderDeleted;// Function to handle adding a new note\nvar handleAddNote=function handleAddNote(){var newNote={title:'New Note',content:''};// Call the onAddNoteToFolder function to add the new note to the selected folder\nonAddNoteToFolder(selectedFolder,newNote);// Set the new note as the selected note\nsetSelectedNote(newNote);};// Function to handle deleting a note\nvar handleDeleteNote=function handleDeleteNote(note){// Call the onDeleteNote function to remove the note from the folder's notes array\nonDeleteNote(selectedFolder,note);// If the selected note is the one being deleted, clear the selected note\nif(selectedNote===note){setSelectedNote(null);}};return/*#__PURE__*/_jsx(\"div\",{className:\"notes-list\",children:isFolderDeleted?/*#__PURE__*/_jsx(\"p\",{children:\"No folder selected.\"}):selectedFolder?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"All Notes in \",selectedFolder]}),folderNotes[selectedFolder]&&folderNotes[selectedFolder].length>0?folderNotes[selectedFolder].map(function(note,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"note \".concat(selectedNote===note?'selected-note':''),onClick:function onClick(){return setSelectedNote(note);},children:[/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:function onClick(){return handleDeleteNote(note);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteButton,alt:\"Delete\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{children:note.title})})]},index);}):/*#__PURE__*/_jsx(\"p\",{children:\"No notes available.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-button\",onClick:handleAddNote,children:/*#__PURE__*/_jsx(\"img\",{src:addButton,alt:\"Add Note\"})})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No folder selected.\"})});};export default NoteList;","map":{"version":3,"names":["React","addButton","deleteButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NoteList","_ref","selectedFolder","folderNotes","selectedNote","setSelectedNote","onAddNoteToFolder","onDeleteNote","isFolderDeleted","handleAddNote","newNote","title","content","handleDeleteNote","note","className","children","length","map","index","concat","onClick","src","alt"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/todo-page/NoteList.js"],"sourcesContent":["import React from 'react';\r\nimport addButton from '../../assets/add-button.PNG';\r\nimport deleteButton from '../../assets/delete-button.PNG';\r\n\r\n\r\nconst NoteList = ({ selectedFolder, folderNotes, selectedNote, setSelectedNote, onAddNoteToFolder, onDeleteNote, isFolderDeleted }) => {\r\n  // Function to handle adding a new note\r\n  const handleAddNote = () => {\r\n    const newNote = {\r\n      title: 'New Note',\r\n      content: '',\r\n    };\r\n    // Call the onAddNoteToFolder function to add the new note to the selected folder\r\n    onAddNoteToFolder(selectedFolder, newNote);\r\n    // Set the new note as the selected note\r\n    setSelectedNote(newNote);\r\n  };\r\n\r\n  // Function to handle deleting a note\r\n  const handleDeleteNote = (note) => {\r\n    // Call the onDeleteNote function to remove the note from the folder's notes array\r\n    onDeleteNote(selectedFolder, note);\r\n    // If the selected note is the one being deleted, clear the selected note\r\n    if (selectedNote === note) {\r\n      setSelectedNote(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {isFolderDeleted ? (\r\n        <p>No folder selected.</p>\r\n      ) : selectedFolder ? (\r\n        <>\r\n          <h2>All Notes in {selectedFolder}</h2>\r\n          {folderNotes[selectedFolder] && folderNotes[selectedFolder].length > 0 ? (\r\n            folderNotes[selectedFolder].map((note, index) => (\r\n              <div\r\n                key={index}\r\n                className={`note ${selectedNote === note ? 'selected-note' : ''}`}\r\n                onClick={() => setSelectedNote(note)}\r\n              >\r\n                <button className=\"delete-button\" onClick={() => handleDeleteNote(note)}>\r\n                  <img src={deleteButton} alt=\"Delete\" />\r\n                </button>\r\n                <div>\r\n                  <h3>{note.title}</h3>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No notes available.</p>\r\n          )}\r\n          <button className=\"add-button\" onClick={handleAddNote}>\r\n            <img src={addButton} alt=\"Add Note\" />\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <p>No folder selected.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}