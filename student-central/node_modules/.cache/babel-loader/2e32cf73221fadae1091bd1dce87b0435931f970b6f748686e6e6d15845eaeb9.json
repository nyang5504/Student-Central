{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\EditQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport '../../styles/quiz-page/EditQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuiz = () => {\n  _s();\n  const {\n    quizName\n  } = useParams();\n  const history = useHistory();\n  const [quizData, setQuizData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch the quiz data from the server based on quizName\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/quiz/get-quiz/${quizName}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch quiz data.');\n        }\n        const data = await response.json();\n        setQuizData(data);\n      } catch (error) {\n        setError('Error fetching quiz data.');\n      }\n    };\n    fetchQuizData();\n  }, [quizName]);\n  const handleSaveChanges = async () => {\n    // Send the updated quiz data to the server to be saved\n    try {\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\n        method: 'PUT',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData) // Send the updated quiz data to the server\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save changes.');\n      }\n      history.push('/saved-quizzes'); // Redirect to the saved quizzes page after successful update\n    } catch (error) {\n      console.log('Error saving changes:', error);\n      setError('Failed to save changes.');\n    }\n  };\n  const handleAddQuestion = () => {\n    // Add a new question to the quizData\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: [...prevData.questions, {\n        question: '',\n        answer: ''\n      }]\n    }));\n  };\n  const handleRemoveQuestion = index => {\n    // Remove a question from the quizData based on its index\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.filter((_, i) => i !== index)\n    }));\n  };\n  const handleChange = (event, index) => {\n    // Update the quizData state when user makes changes to the quiz\n    const {\n      name,\n      value\n    } = event.target;\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.map((question, i) => i === index ? {\n        ...question,\n        [name]: value\n      } : question)\n    }));\n  };\n  if (!quizData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"quizName\",\n      value: quizData.quizName,\n      onChange: e => handleChange(e, 0) // Handle quiz name change (index 0 represents the quiz name)\n      ,\n      placeholder: \"Quiz Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `question${index + 1}`,\n          value: question.question,\n          onChange: e => handleChange(e, index + 1) // Handle question change\n          ,\n          placeholder: `Question ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `answer${index + 1}`,\n          value: question.answer,\n          onChange: e => handleChange(e, index + 1) // Handle answer change\n          ,\n          placeholder: `Answer ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveQuestion(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(EditQuiz, \"nUwk/VKgpdyco3mvxBu/NmE9FOo=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","jsxDEV","_jsxDEV","EditQuiz","_s","quizName","history","quizData","setQuizData","error","setError","fetchQuizData","response","fetch","method","credentials","ok","Error","data","json","handleSaveChanges","headers","body","JSON","stringify","push","console","log","handleAddQuestion","prevData","questions","question","answer","handleRemoveQuestion","index","filter","_","i","handleChange","event","name","value","target","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/EditQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport '../../styles/quiz-page/EditQuiz.css';\r\n\r\nconst EditQuiz = () => {\r\n  const { quizName } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [quizData, setQuizData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the quiz data from the server based on quizName\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/api/quiz/get-quiz/${quizName}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch quiz data.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setQuizData(data);\r\n      } catch (error) {\r\n        setError('Error fetching quiz data.');\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [quizName]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    // Send the updated quiz data to the server to be saved\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\r\n        method: 'PUT',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(quizData), // Send the updated quiz data to the server\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save changes.');\r\n      }\r\n\r\n      history.push('/saved-quizzes'); // Redirect to the saved quizzes page after successful update\r\n    } catch (error) {\r\n      console.log('Error saving changes:', error);\r\n      setError('Failed to save changes.');\r\n    }\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    // Add a new question to the quizData\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: [\r\n        ...prevData.questions,\r\n        {\r\n          question: '',\r\n          answer: '',\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleRemoveQuestion = (index) => {\r\n    // Remove a question from the quizData based on its index\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: prevData.questions.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleChange = (event, index) => {\r\n    // Update the quizData state when user makes changes to the quiz\r\n    const { name, value } = event.target;\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      questions: prevData.questions.map((question, i) =>\r\n        i === index ? { ...question, [name]: value } : question\r\n      ),\r\n    }));\r\n  };\r\n\r\n  if (!quizData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-quiz\">\r\n      <h2>Edit Quiz</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"quizName\"\r\n        value={quizData.quizName}\r\n        onChange={(e) => handleChange(e, 0)} // Handle quiz name change (index 0 represents the quiz name)\r\n        placeholder=\"Quiz Name\"\r\n      />\r\n      <ul>\r\n        {quizData.questions.map((question, index) => (\r\n          <li key={index}>\r\n            <input\r\n              type=\"text\"\r\n              name={`question${index + 1}`}\r\n              value={question.question}\r\n              onChange={(e) => handleChange(e, index + 1)} // Handle question change\r\n              placeholder={`Question ${index + 1}`}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name={`answer${index + 1}`}\r\n              value={question.answer}\r\n              onChange={(e) => handleChange(e, index + 1)} // Handle answer change\r\n              placeholder={`Answer ${index + 1}`}\r\n            />\r\n            <button onClick={() => handleRemoveQuestion(index)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleAddQuestion}>Add Question</button>\r\n      <button onClick={handleSaveChanges}>Save Changes</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}