{"ast":null,"code":"import _slicedToArray from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import'../../styles/quiz-page/QuizSearch.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizSearch=function QuizSearch(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),allQuizzes=_useState2[0],setAllQuizzes=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),filteredQuizzes=_useState6[0],setFilteredQuizzes=_useState6[1];// Use useLocation hook to get the search term from the URL\nvar location=useLocation();var queryParams=new URLSearchParams(location.search);var searchTermParam=queryParams.get('term')||'';//Retrieves every quiz from every user\nuseEffect(function(){fetch('http://localhost:4000/api/quiz/all-quizzes').then(function(response){return response.json();}).then(function(data){console.log(\"allquizData\",data);setAllQuizzes(data);}).catch(function(error){console.error('Error fetching quizzes:',error);});},[]);useEffect(function(){// Use the search term from the URL\nconsole.log(\"useEffect!!!\");setSearchTerm(searchTermParam||'');// Filter quizzes based on the search term\n// const filtered = Object.keys(allQuizzes).reduce((result, quizName) => {\n//     if (quizName.toLowerCase().includes(searchTermParam.toLowerCase())) {\n//         return { ...result, quizName };\n//     }\n//     return result;\n// }, {});\nconsole.log(\"query\",queryParams);console.log(\"search\",searchTermParam);var filtered={};Object.keys(allQuizzes).forEach(function(user){filtered[user]=allQuizzes[user].filter(function(quiz){return quiz.toLowerCase().includes(searchTermParam.toLowerCase());});});console.log(\"filtered\",filtered);setFilteredQuizzes(filtered);},[searchTermParam,allQuizzes]);var handleSearchChange=function handleSearchChange(event){setSearchTerm(event.target.value);};// handle when user wants to make another search\nvar handleSearchSubmit=function handleSearchSubmit(event){event.preventDefault();//Changes the url\nwindow.location.href=\"/quiz/search?term=\".concat(encodeURIComponent(searchTerm));};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-search\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quiz Search\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearchSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchTerm,onChange:handleSearchChange,placeholder:\"Search for quizzes...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quiz-list\",children:Object.keys(filteredQuizzes).length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No quizzes found.\"}):/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(filteredQuizzes).map(function(creatorName){return filteredQuizzes[creatorName].map(function(quizName){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[quizName,\" by: \",creatorName]}),/*#__PURE__*/_jsx(Link,{to:\"/quiz/start-quiz/\".concat(quizName),state:{prevPath:location.pathname,creator:creatorName},children:\"Start\"})]},quizName);});})})})]});};export default QuizSearch;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","jsx","_jsx","jsxs","_jsxs","QuizSearch","_useState","_useState2","_slicedToArray","allQuizzes","setAllQuizzes","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","filteredQuizzes","setFilteredQuizzes","location","queryParams","URLSearchParams","search","searchTermParam","get","fetch","then","response","json","data","console","log","catch","error","filtered","Object","keys","forEach","user","filter","quiz","toLowerCase","includes","handleSearchChange","event","target","value","handleSearchSubmit","preventDefault","window","href","concat","encodeURIComponent","className","children","onSubmit","type","onChange","placeholder","length","map","creatorName","quizName","to","state","prevPath","pathname","creator"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/quiz-page/QuizSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../../styles/quiz-page/QuizSearch.css';\r\n\r\nconst QuizSearch = () => {\r\n    const [allQuizzes, setAllQuizzes] = useState({});\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredQuizzes, setFilteredQuizzes] = useState({});\r\n\r\n    // Use useLocation hook to get the search term from the URL\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchTermParam = queryParams.get('term') || '';\r\n\r\n    //Retrieves every quiz from every user\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/api/quiz/all-quizzes')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(\"allquizData\", data);\r\n                setAllQuizzes(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching quizzes:', error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Use the search term from the URL\r\n        console.log(\"useEffect!!!\")\r\n        setSearchTerm(searchTermParam || '');\r\n        // Filter quizzes based on the search term\r\n        // const filtered = Object.keys(allQuizzes).reduce((result, quizName) => {\r\n        //     if (quizName.toLowerCase().includes(searchTermParam.toLowerCase())) {\r\n        //         return { ...result, quizName };\r\n        //     }\r\n        //     return result;\r\n        // }, {});\r\n        console.log(\"query\", queryParams);\r\n        console.log(\"search\", searchTermParam);\r\n\r\n        const filtered = {};\r\n        Object.keys(allQuizzes).forEach((user) => { filtered[user] = allQuizzes[user].filter(quiz => quiz.toLowerCase().includes(searchTermParam.toLowerCase())) })\r\n\r\n        console.log(\"filtered\", filtered);\r\n        setFilteredQuizzes(filtered);\r\n    }, [searchTermParam, allQuizzes]);\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    // handle when user wants to make another search\r\n    const handleSearchSubmit = (event) => {\r\n        event.preventDefault();\r\n        //Changes the url\r\n        window.location.href = `/quiz/search?term=${encodeURIComponent(searchTerm)}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz-search\">\r\n            <h2>Quiz Search</h2>\r\n            <form onSubmit={handleSearchSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"Search for quizzes...\"\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            <div className=\"quiz-list\">\r\n                {Object.keys(filteredQuizzes).length === 0 ? (\r\n                    <p>No quizzes found.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {Object.keys(filteredQuizzes).map((creatorName) => (\r\n                            filteredQuizzes[creatorName].map((quizName) =>\r\n                                <li key={quizName}>\r\n                                    <span>{quizName} by: {creatorName}</span>\r\n                                    <Link to={`/quiz/start-quiz/${quizName}`}\r\n                                        state={{ prevPath: location.pathname, creator: creatorName }}>Start</Link>\r\n                                </li>\r\n                            )\r\n\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}