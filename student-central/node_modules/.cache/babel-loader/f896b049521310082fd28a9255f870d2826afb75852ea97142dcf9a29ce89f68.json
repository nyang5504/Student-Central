{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninay\\\\Documents\\\\capstone-499\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = _ref => {\n  _s();\n  let {\n    setSelectedFolder,\n    folders,\n    onAddFolder\n  } = _ref;\n  const [newFolderName, setNewFolderName] = useState('');\n\n  // Function to set the current folder being used and edited\n  const handleFolderClick = folderName => {\n    setSelectedFolder(folderName);\n  };\n\n  // Function to make new folder\n  const handleCreateFolder = () => {\n    // Checks if the name is not empty\n    if (newFolderName.trim() !== '') {\n      onAddFolder(newFolderName);\n      setNewFolderName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-folder\"\n      // Lets user select folder and renders folder name\n      ,\n      onClick: () => handleFolderClick(folder),\n      children: folder\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        // Textbox for users to create folder\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New Folder Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Add Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"Om+YMd4+Dh7wkqnq8nFG3tU0F1w=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sidebar","_ref","_s","setSelectedFolder","folders","onAddFolder","newFolderName","setNewFolderName","handleFolderClick","folderName","handleCreateFolder","trim","className","children","map","folder","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Sidebar.css';\r\n\r\n\r\nconst Sidebar = ({ setSelectedFolder, folders, onAddFolder }) => {\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n\r\n  // Function to set the current folder being used and edited\r\n  const handleFolderClick = (folderName) => {\r\n    setSelectedFolder(folderName);\r\n  };\r\n\r\n  // Function to make new folder\r\n  const handleCreateFolder = () => {\r\n    // Checks if the name is not empty\r\n    if (newFolderName.trim() !== '') {\r\n      onAddFolder(newFolderName);\r\n      setNewFolderName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* Iterates over folder array and creates new array of div elements to render */}\r\n      {folders.map((folder, index) => (\r\n        <div \r\n        key={index} \r\n        className='single-folder'\r\n        // Lets user select folder and renders folder name\r\n        onClick={() => handleFolderClick(folder)}>\r\n        {folder}\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <input\r\n        // Textbox for users to create folder\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New Folder Name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Add Folder</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,OAAO,GAAGC,IAAA,IAAiD;EAAAC,EAAA;EAAA,IAAhD;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAC1D,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMW,iBAAiB,GAAIC,UAAU,IAAK;IACxCN,iBAAiB,CAACM,UAAU,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAIJ,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BN,WAAW,CAACC,aAAa,CAAC;MAC1BC,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,GAErBT,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBjB,OAAA;MAEAa,SAAS,EAAC;MACV;MAAA;MACAK,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAACO,MAAM,CAAE;MAAAF,QAAA,EACxCE;IAAM,GAJFC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL,CACN,CAAC,eACFtB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QACA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,aAAc;QACrBkB,QAAQ,EAAGC,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAClDI,WAAW,EAAC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFtB,OAAA;QAAQkB,OAAO,EAAEP,kBAAmB;QAAAG,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzCIF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}