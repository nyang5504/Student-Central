{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\EditQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../../styles/quiz-page/EditQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuiz = () => {\n  _s();\n  const {\n    quizName\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState({\n    quizName: '',\n    questions: []\n  });\n  useEffect(() => {\n    // Fetch the quiz data from the server based on quizName\n    const fetchQuizData = async () => {\n      try {\n        console.log(quizName);\n        const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch quiz data.');\n        }\n        const data = await response.json();\n        setQuizData(data);\n      } catch (error) {\n        console.log('Error fetching quiz data.', error);\n      }\n    };\n    fetchQuizData();\n  }, [quizName]);\n  const handleSaveChanges = async () => {\n    // Send the updated quiz data to the server to be saved\n    try {\n      const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\n        method: 'PUT',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData) // Send the updated quiz data to the server\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save changes.');\n      }\n      navigate('/saved-quizzes'); // Redirect to the saved quizzes page after successful update\n    } catch (error) {\n      console.log('Error saving changes:', error);\n    }\n  };\n  const handleAddQuestion = () => {\n    // Ensure quizData has a questions property before adding a new question\n    if (!quizData.hasOwnProperty('questions')) {\n      setQuizData(prevData => ({\n        ...prevData,\n        questions: [{\n          question: '',\n          answer: ''\n        }]\n      }));\n    } else {\n      // Add a new question to the existing questions array\n      setQuizData(prevData => ({\n        ...prevData,\n        questions: [...prevData.questions, {\n          question: '',\n          answer: ''\n        }]\n      }));\n    }\n  };\n  const handleRemoveQuestion = index => {\n    // Remove a question from the quizData based on its index\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.filter((_, i) => i !== index)\n    }));\n  };\n  const handleChange = (event, index) => {\n    // Update the quizData state when user makes changes to the quiz\n    const {\n      name,\n      value\n    } = event.target;\n    setQuizData(prevData => ({\n      ...prevData,\n      questions: prevData.questions.map((question, i) => i === index ? {\n        ...question,\n        [name]: value\n      } : question)\n    }));\n  };\n  if (!quizData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"quizName\",\n      value: quizData.quizName,\n      onChange: e => handleChange(e, 0) // Handle quiz name change (index 0 represents the quiz name)\n      ,\n      placeholder: \"Quiz Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizData.questions && quizData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `question${index + 1}`,\n          value: question.question || '' // Provide an empty string as default value\n          ,\n          onChange: e => handleChange(e, index + 1) // Handle question change\n          ,\n          placeholder: `Question ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `answer${index + 1}`,\n          value: question.answer || '' // Provide an empty string as default value\n          ,\n          onChange: e => handleChange(e, index + 1) // Handle answer change\n          ,\n          placeholder: `Answer ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveQuestion(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(EditQuiz, \"G+l+CtQTTIUp/q8TqZ0qlJlb9qI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuiz;\nexport default EditQuiz;\nvar _c;\n$RefreshReg$(_c, \"EditQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuiz","_s","quizName","navigate","quizData","setQuizData","questions","fetchQuizData","console","log","response","fetch","method","credentials","ok","Error","data","json","error","handleSaveChanges","headers","body","JSON","stringify","handleAddQuestion","hasOwnProperty","prevData","question","answer","handleRemoveQuestion","index","filter","_","i","handleChange","event","name","value","target","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/EditQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../../styles/quiz-page/EditQuiz.css';\r\n\r\nconst EditQuiz = () => {\r\n    const { quizName } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [quizData, setQuizData] = useState({\r\n        quizName: '',\r\n        questions: [],\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // Fetch the quiz data from the server based on quizName\r\n        const fetchQuizData = async () => {\r\n            try {\r\n                console.log(quizName);\r\n                const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch quiz data.');\r\n                }\r\n                const data = await response.json();\r\n                setQuizData(data);\r\n            } catch (error) {\r\n                console.log('Error fetching quiz data.', error);\r\n            }\r\n        };\r\n\r\n        fetchQuizData();\r\n    }, [quizName]);\r\n\r\n    const handleSaveChanges = async () => {\r\n        // Send the updated quiz data to the server to be saved\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/api/quiz/edit-quiz/${quizName}`, {\r\n                method: 'PUT',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(quizData), // Send the updated quiz data to the server\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to save changes.');\r\n            }\r\n\r\n            navigate('/saved-quizzes'); // Redirect to the saved quizzes page after successful update\r\n        } catch (error) {\r\n            console.log('Error saving changes:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddQuestion = () => {\r\n        // Ensure quizData has a questions property before adding a new question\r\n        if (!quizData.hasOwnProperty('questions')) {\r\n            setQuizData((prevData) => ({\r\n                ...prevData,\r\n                questions: [\r\n                    {\r\n                        question: '',\r\n                        answer: '',\r\n                    },\r\n                ],\r\n            }));\r\n        } else {\r\n            // Add a new question to the existing questions array\r\n            setQuizData((prevData) => ({\r\n                ...prevData,\r\n                questions: [\r\n                    ...prevData.questions,\r\n                    {\r\n                        question: '',\r\n                        answer: '',\r\n                    },\r\n                ],\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleRemoveQuestion = (index) => {\r\n        // Remove a question from the quizData based on its index\r\n        setQuizData((prevData) => ({\r\n            ...prevData,\r\n            questions: prevData.questions.filter((_, i) => i !== index),\r\n        }));\r\n    };\r\n\r\n    const handleChange = (event, index) => {\r\n        // Update the quizData state when user makes changes to the quiz\r\n        const { name, value } = event.target;\r\n        setQuizData((prevData) => ({\r\n            ...prevData,\r\n            questions: prevData.questions.map((question, i) =>\r\n                i === index ? { ...question, [name]: value } : question\r\n            ),\r\n        }));\r\n    };\r\n\r\n    if (!quizData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-quiz\">\r\n            <h2>Edit Quiz</h2>\r\n            <input\r\n                type=\"text\"\r\n                name=\"quizName\"\r\n                value={quizData.quizName}\r\n                onChange={(e) => handleChange(e, 0)} // Handle quiz name change (index 0 represents the quiz name)\r\n                placeholder=\"Quiz Name\"\r\n            />\r\n            <ul>\r\n                {quizData.questions && quizData.questions.map((question, index) => (\r\n                    <li key={index}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name={`question${index + 1}`}\r\n                            value={question.question || ''} // Provide an empty string as default value\r\n                            onChange={(e) => handleChange(e, index + 1)} // Handle question change\r\n                            placeholder={`Question ${index + 1}`}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name={`answer${index + 1}`}\r\n                            value={question.answer || ''} // Provide an empty string as default value\r\n                            onChange={(e) => handleChange(e, index + 1)} // Handle answer change\r\n                            placeholder={`Answer ${index + 1}`}\r\n                        />\r\n\r\n                        <button onClick={() => handleRemoveQuestion(index)}>Remove</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={handleAddQuestion}>Add Question</button>\r\n            <button onClick={handleSaveChanges}>Save Changes</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}