{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Barrie\\\\Documents\\\\Project\\\\Student-Central\\\\student-central\\\\src\\\\components\\\\quiz-page\\\\StartQuizpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartQuizPage = () => {\n  _s();\n  const {\n    quizName\n  } = useParams();\n  const navigate = useNavigate();\n  const [quizData, setQuizData] = useState({\n    quizName: '',\n    questions: [],\n    quizType: null\n  });\n  useEffect(() => {\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch quiz data.');\n        }\n        const data = await response.json();\n        const quizData = {\n          quizName: quizName,\n          questions: data.map(question => ({\n            term: question.term || '',\n            definition: question.definition || ''\n          })),\n          quizType: null // Initialize the quizType as null initially\n        };\n\n        setQuizData(quizData);\n      } catch (error) {\n        console.log('Error fetching quiz data.', error);\n      }\n    };\n    fetchQuizData();\n  }, [quizName]);\n  const handleQuizTypeSelection = quizType => {\n    // Update the quizType in quizData when the user selects a quiz type\n    setQuizData(prevData => ({\n      ...prevData,\n      quizType: quizType\n    }));\n\n    // Navigate to the QuizQuestions page with the selected quiz type as a URL parameter\n    navigate(`/quiz/${quizName}/questions?type=${quizType}`);\n    console.log('Quiz Data:', quizData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Start Quiz: \", quizData.quizName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Quiz Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuizTypeSelection('multipleChoice'),\n        className: quizData.quizType === 'multipleChoice' ? 'selected' : '',\n        children: \"Multiple Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuizTypeSelection('written'),\n        className: quizData.quizType === 'written' ? 'selected' : '',\n        children: \"Written Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuizTypeSelection('both'),\n        className: quizData.quizType === 'both' ? 'selected' : '',\n        children: \"Both\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(StartQuizPage, \"RQrqM+FZQB16xz2RQ7NekYpH+xA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StartQuizPage;\nexport default StartQuizPage;\nvar _c;\n$RefreshReg$(_c, \"StartQuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","StartQuizPage","_s","quizName","navigate","quizData","setQuizData","questions","quizType","fetchQuizData","response","fetch","method","credentials","ok","Error","data","json","map","question","term","definition","error","console","log","handleQuizTypeSelection","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed Barrie/Documents/Project/Student-Central/student-central/src/components/quiz-page/StartQuizpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst StartQuizPage = () => {\r\n  const { quizName } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [quizData, setQuizData] = useState({\r\n    quizName: '',\r\n    questions: [],\r\n    quizType: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/api/quiz/get-one-quiz/${quizName}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch quiz data.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        const quizData = {\r\n          quizName: quizName,\r\n          questions: data.map((question) => ({\r\n            term: question.term || '',\r\n            definition: question.definition || '',\r\n          })),\r\n          quizType: null, // Initialize the quizType as null initially\r\n        };\r\n        setQuizData(quizData);\r\n      } catch (error) {\r\n        console.log('Error fetching quiz data.', error);\r\n      }\r\n    };\r\n    fetchQuizData();\r\n  }, [quizName]);\r\n\r\n  const handleQuizTypeSelection = (quizType) => {\r\n    // Update the quizType in quizData when the user selects a quiz type\r\n    setQuizData((prevData) => ({\r\n      ...prevData,\r\n      quizType: quizType,\r\n    }));\r\n    \r\n    // Navigate to the QuizQuestions page with the selected quiz type as a URL parameter\r\n    navigate(`/quiz/${quizName}/questions?type=${quizType}`);\r\n    console.log('Quiz Data:', quizData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Start Quiz: {quizData.quizName}</h2>\r\n      <div>\r\n        <p>Select Quiz Type:</p>\r\n        <button\r\n          onClick={() => handleQuizTypeSelection('multipleChoice')}\r\n          className={quizData.quizType === 'multipleChoice' ? 'selected' : ''}\r\n        >\r\n          Multiple Choice\r\n        </button>\r\n        <button\r\n          onClick={() => handleQuizTypeSelection('written')}\r\n          className={quizData.quizType === 'written' ? 'selected' : ''}\r\n        >\r\n          Written Question\r\n        </button>\r\n        <button\r\n          onClick={() => handleQuizTypeSelection('both')}\r\n          className={quizData.quizType === 'both' ? 'selected' : ''}\r\n        >\r\n          Both\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartQuizPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}