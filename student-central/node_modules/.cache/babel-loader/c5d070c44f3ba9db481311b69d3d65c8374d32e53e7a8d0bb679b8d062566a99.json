{"ast":null,"code":"import _slicedToArray from\"C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import{useState}from'react';import{useNavigate}from'react-router-dom';import'../../styles/schedule-page/Schedulepage.css';import Schedule from'./Schedule';import AddEventPopup from'./AddEventPopup';import AddBtn from\"../../assets/add-btn.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SchedulePage=function SchedulePage(){//state variable and function to keep track of all events\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mounted=_useState4[0],setMounted=_useState4[1];//boolean to determine if the form popup is open\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFormOpen=_useState6[0],setIsFormOpen=_useState6[1];var navigate=useNavigate();//fetches previously saved events from database\nuseEffect(function(){var fetchData=function fetchData(){fetch('http://localhost:4000/api/schedule/my-events',{method:'GET',credentials:'include'}).then(function(response){if(response.status===401){navigate('/login');return;}return response.json();}).then(function(data){setEvents(data);}).catch(function(error){console.error('Error fetching events:',error);});};fetchData();},[]);//saves data to database\nuseEffect(function(){var saveToDatabase=function saveToDatabase(){try{// console.log(\"SAVETODATABASE\", JSON.stringify(events));\nfetch('http://localhost:4000/api/schedule/save-events',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(events),credentials:'include'});}catch(error){console.log(\"error saveToDatabase\",error);}};//if already mounted, save events to database\nif(mounted){saveToDatabase();}//if mounting for the first time, dont save\nelse{setMounted(true);}},[events]);var ToggleFormPopup=function ToggleFormPopup(){setIsFormOpen(!isFormOpen);};return/*#__PURE__*/_jsxs(\"div\",{className:\"schedulepage-container\",children:[/*#__PURE__*/_jsx(Schedule,{myEvents:events,currEvents:events,updateEvents:setEvents}),/*#__PURE__*/_jsx(\"img\",{src:AddBtn,onClick:ToggleFormPopup,id:\"add-btn\"}),isFormOpen&&/*#__PURE__*/_jsx(AddEventPopup,{setEvents:setEvents,currEvents:events,toggleForm:ToggleFormPopup})]});};export default SchedulePage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Schedule","AddEventPopup","AddBtn","jsx","_jsx","jsxs","_jsxs","SchedulePage","_useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","mounted","setMounted","_useState5","_useState6","isFormOpen","setIsFormOpen","navigate","fetchData","fetch","method","credentials","then","response","status","json","data","catch","error","console","saveToDatabase","headers","body","JSON","stringify","log","ToggleFormPopup","className","children","myEvents","currEvents","updateEvents","src","onClick","id","toggleForm"],"sources":["C:/Users/ninay/Documents/capstone-499/Student-Central/student-central/src/components/schedule-page/Schedulepage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles/schedule-page/Schedulepage.css';\r\nimport Schedule from './Schedule';\r\nimport AddEventPopup from './AddEventPopup';\r\nimport AddBtn from \"../../assets/add-btn.png\"\r\n\r\nconst SchedulePage = () => {\r\n\r\n    //state variable and function to keep track of all events\r\n    const [events, setEvents] = useState([]);\r\n    \r\n    const [mounted, setMounted] = useState(false);\r\n    \r\n    //boolean to determine if the form popup is open\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //fetches previously saved events from database\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n          fetch('http://localhost:4000/api/schedule/my-events', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 401) {\r\n              navigate('/login');\r\n              return;\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            setEvents(data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching events:', error);\r\n          });\r\n        };\r\n      \r\n        fetchData();\r\n      }, []);\r\n\r\n    //saves data to database\r\n    useEffect(() => {\r\n        const saveToDatabase = () => {\r\n            try{\r\n                // console.log(\"SAVETODATABASE\", JSON.stringify(events));\r\n                    fetch('http://localhost:4000/api/schedule/save-events', {\r\n                    method:'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(events),\r\n                    credentials: 'include'\r\n                })\r\n            } catch (error) {\r\n                console.log(\"error saveToDatabase\", error);\r\n            }\r\n        }\r\n        //if already mounted, save events to database\r\n        if(mounted){\r\n            saveToDatabase();\r\n        }\r\n        //if mounting for the first time, dont save\r\n        else{\r\n            setMounted(true);\r\n        }\r\n    }, [events]);\r\n\r\n    const ToggleFormPopup = () => {\r\n        setIsFormOpen(!isFormOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"schedulepage-container\">\r\n            {/* component that includes that calendar itself */}\r\n            <Schedule myEvents={events} currEvents={events} updateEvents={setEvents}/>\r\n            {/* image of a plus sign to add events */}\r\n            <img src={AddBtn} onClick={ToggleFormPopup} id=\"add-btn\"/>\r\n            {/* AddEventPopup component will only show if isFormOpen variable is true */}\r\n            {isFormOpen && \r\n                <AddEventPopup \r\n                    setEvents={setEvents}\r\n                    currEvents={events}\r\n                    toggleForm={ToggleFormPopup}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SchedulePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}